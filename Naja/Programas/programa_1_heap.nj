
define pai(i)
	retorna piso(i/2)
fim

define filho_esquerdo(i)
	retorna 2*i
fim

define filho_direito(i)
	retorna 2*i + 1
fim

define prepara_heap(A, i)
	maior = i
	fe = filho_esquerdo(i)
	fd = filho_direito(i)

	se fe <= A.tamanho
		se A[fe] > A[maior]
			maior = fe
		fim
	fim

	se fd <= A.tamanho
		se A[fd] > A[maior]
			maior = fd
		fim
	fim

	se maior != i
		troca(A[i], A[maior])
		prepara_heap(A, maior)
	fim
fim

define constroi_heap(A)
	//para i = piso(A.tamanho/2) até 1
	i = piso(A.tamanho/2)
	enquanto i ≥ 1
		prepara_heap(A, i)
		i--
	fim
fim

define ordena_heap A
	t = A.tamanho
	//para i = A.tamanho até 2
	i = A.tamanho
	enquanto i ≥ 2
		troca A[1] com A[i]
		A.tamanho--
		prepara_heap(A, 1)
		i--
	fim
	A.tamanho = t
fim

A = [7,10,50,80,1,3,8,2]
imprime(A)

constroi_heap(A)
imprime(A)

ordena_heap(A)
imprime(A)